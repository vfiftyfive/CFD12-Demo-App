allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ondat
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: csi-controller-expand-secret
  csi.storage.k8s.io/controller-expand-secret-namespace: kube-system
  csi.storage.k8s.io/controller-publish-secret-name: csi-controller-publish-secret
  csi.storage.k8s.io/controller-publish-secret-namespace: kube-system
  csi.storage.k8s.io/fstype: ext4
  csi.storage.k8s.io/node-publish-secret-name: csi-node-publish-secret
  csi.storage.k8s.io/node-publish-secret-namespace: kube-system
  csi.storage.k8s.io/provisioner-secret-name: csi-provisioner-secret
  csi.storage.k8s.io/provisioner-secret-namespace: kube-system
  storageos.com/replicas: "1"
provisioner: csi.storageos.com
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  clusterIP: None
  ports:
  - name: peer
    port: 27017
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: marvel-frontend
  name: marvel-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: marvel-frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: marvel-frontend
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb-0.mongodb.default.svc.cluster.local
        image: vfiftyfive/flask_marvel:1.0_test
        name: flask-marvel
        ports:
        - containerPort: 80
        resources: {}
status: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  serviceName: mongodb
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - command:
        - mongod
        - --replSet
        - marvel-mongo
        image: mongo:3.4.1
        name: mongodb
        ports:
        - containerPort: 27017
          name: peer
        volumeMounts:
        - mountPath: /data
          name: database
  volumeClaimTemplates:
  - metadata:
      name: database
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: ondat
---
apiVersion: batch/v1
kind: Job
metadata:
  creationTimestamp: null
  name: add-data-to-mongodb
spec:
  backoffLimit: 4
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb-0.mongodb.default.svc.cluster.local
        - name: OFFSET
          value: "200"
        image: vfiftyfive/marvel_init_db
        name: add-data-to-mongodb
        resources: {}
      restartPolicy: Never
status: {}
